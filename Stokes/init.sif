!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! Elmer Solver input file
!!
!! Initialization for Midre Lovenbreen
!!
!! All units are in m-MPa-year
!! Temperatures are in Kelvin
!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!---LUA BEGIN
! assert(loadfile('./eismint.lua'))()
!---LUA END



! switch that on for debugging only
! ---------------------------------
! check keywords warn
! echo on


$name="init"
$meshdb="circular_coarse"

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Partitioned mesh
Header
  Mesh DB "." $meshdb
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants
 Gas Constant = Real 8.314D00 ! in m-k-s
  Stefan Boltzmann = Real 6.78E-08
  Gravity(4) = 0 0 -1 9.81
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System  = "Cartesian 3D"
  Simulation Type = "Steady State"             

  ! Iterations between different solvers
  ! ------------------------------------
  Steady State Max Iterations = 1 
  Steady State Min Iterations = 1

  ! usually, Dirichlet BC's are initialized 
  ! before everything else. Sometimes those 
  ! conditions are dependent on solutions of
  ! earlier solvers; next line ensures that
  ! this is not an issue
  !-----------------------------------------
  Initialize Dirichlet Conditions = Logical False
  
  !Restart Before Initial Conditions = Logical False
  ! Output files
  ! ------------
  !   Binary Output = Logical True

   Output File = "$name$.result"

  ! how verbose the solver should be
  !  1 = very low (Finnish style = crucial feedback, only) 
  ! 42 = the answer to all and everything
  !-------------------------------------------------------
  max output level = 3
  Extruded Mesh Levels = #mlev
  Extruded Max Coordinate = Real 1

End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! SOLVER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 1
  Exec Solver = "before timestep"

  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"

  Variable = -nooutput dummyvar

  Active Coordinate = Integer 3 ! the mesh-update is y-direction

! For time being this is currently externally allocated
  Mesh Velocity Variable = String "Mesh Velocity"

! The 1st value is special as the mesh velocity could be unrelistically high
  Mesh Velocity First Zero = Logical True

!  Top Surface Variable = String "Zs"

  Dot Product Tolerance = Real 0.001
  
  !Minimum Mesh Height = Real #hmin
  !Minimum Height = Real #hmin
  !Correct Surface = Logical True
End

Solver 2
  Equation = "ResultOutput"
  Procedure = "ResultOutputSolve" "ResultOutputSolver"
  Output File Name = "$name$"
  Vtu format = Logical True
  !Scalar Field 1 = "pressure"
  Discontinuous Galerkin = Logical True
  Discontinuous Bodies = Logical True
  !Vector Field 1 = "Velocity"
  Save Geometry Ids = Logical True
End 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BODIES (i.e., domains to compute on)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Body 1
  Name = "glacier"
  Equation = 1
  Material = 1
  Body Force = 1
  Initial Condition = 1
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Equation 1
 Active Solvers(2) = 1 2 
 Convection = Computed ! we have a computed velocity field
 Flow Solution Name = String "Flow Solution" ! and that is its name
 !NS Convect = False 
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
  Depth = Real 0.0
  Height = Real 0.0
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BODY FORCE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! MATERIAL
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1

  ! Dummy, for the time being
  !----------------
  Density = Real 917.0
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!BOUNDARY CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Boundary Condition 1
  Name = "side"
  Target Boundaries(1) = 1 
End

Boundary Condition 2
  Name = "bedrock"
  Bottom Surface = Real 0.0
End

Boundary Condition 3
  Top Surface = Variable Coordinate 1, Coordinate 2
     Real Lua "nodimelev(tx[0],tx[1])"
End


